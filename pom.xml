<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.6.RELEASE</version>
    </parent>
    
	<groupId>com.jupiterframework</groupId>
	<artifactId>jupiter-parent</artifactId>
	<version>2.1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
		
		<spring.cloud.version>Hoxton.SR4</spring.cloud.version>
		<spring.boot.version>2.2.6.RELEASE</spring.boot.version>
		<spring.admin.version>2.2.2</spring.admin.version>
		
		<slf4j.version>1.7.30</slf4j.version>
		<lombok.version>1.18.8</lombok.version>
		<swagger.version>2.9.2</swagger.version>
		
		<mybatis.plus.version>3.3.1</mybatis.plus.version>
		<mysql.version>5.1.46</mysql.version>
		
		<mvel.version>2.4.7.Final</mvel.version>
		<fastjson.version>1.2.83</fastjson.version>
		<jackson.version>2.10.4</jackson.version>
		<kryo.version>5.0.0-RC5</kryo.version>
		<kryo.serializers.version>0.45</kryo.serializers.version>
		<gson.version>2.8.6</gson.version>
		<snappy.java.version>1.1.7.3</snappy.java.version>
		<asm.version>8.0.1</asm.version>
		<commons.io.version>2.6</commons.io.version>
		<commons.compress.version>1.20</commons.compress.version>
		<commons.lang3.version>3.10</commons.lang3.version>
		<commons.configuration2>2.7</commons.configuration2>
		<commons.collections4.verson>4.4</commons.collections4.verson>
		<commons.fileupload.version>1.4</commons.fileupload.version>
		
		
		<jupiter.framework.version>2.1.0-SNAPSHOT</jupiter.framework.version>
	</properties>

	<modules>
	</modules>

	<dependencyManagement>
		<dependencies>
			<!-- 
	        <dependency>
	            <groupId>com.alibaba.cloud</groupId>
	            <artifactId>spring-cloud-alibaba-dependencies</artifactId>
	            <version>2.1.0.RELEASE</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency>
	         -->
			<dependency>
			    <groupId>org.springframework.cloud</groupId>
			    <artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring.cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- 
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<!-- spring boot admin -->
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-server</artifactId>
				<version>${spring.admin.version}</version>
			</dependency>

			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-server-ui</artifactId>
				<version>${spring.admin.version}</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-client</artifactId>
				<version>${spring.admin.version}</version>
			</dependency>
			<!-- 数据库相关 -->
			<dependency>
				<groupId>org.bgee.log4jdbc-log4j2</groupId>
				<artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
				<version>1.16</version>
			</dependency>
			<dependency>
			    <groupId>com.baomidou</groupId>
			    <artifactId>mybatis-plus-boot-starter</artifactId>
			    <version>${mybatis.plus.version}</version>
			</dependency>
			<!-- api doc -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-bean-validators</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${swagger.version}</version>
			</dependency>

			<!-- 工具类 -->
			<dependency>
				<groupId>org.mvel</groupId>
				<artifactId>mvel2</artifactId>
				<version>${mvel.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${gson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-compress</artifactId>
				<version>${commons.compress.version}</version>
			</dependency>
			<dependency>
				<groupId>org.xerial.snappy</groupId>
				<artifactId>snappy-java</artifactId><!-- 解压缩 -->
				<version>${snappy.java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons.lang3.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.apache.commons</groupId>
			    <artifactId>commons-collections4</artifactId>
			    <version>${commons.collections4.verson}</version>
			</dependency>
			<dependency>
				<groupId>com.esotericsoftware</groupId>
				<artifactId>kryo</artifactId>
				<version>${kryo.version}</version>
			</dependency>
			<dependency>
				<groupId>de.javakaffee</groupId>
				<artifactId>kryo-serializers</artifactId>
				<version>${kryo.serializers.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.esotericsoftware.kryo</groupId>
						<artifactId>kryo</artifactId>
					</exclusion>
					<exclusion>
						<artifactId>protobuf-java</artifactId>
						<groupId>com.google.protobuf</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.ow2.asm</groupId>
				<artifactId>asm</artifactId>
				<version>${asm.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons.fileupload.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-configuration2</artifactId>
				<version>${commons.configuration2}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- 报表导入导出相关 start -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>3.17</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>3.17</version>
			</dependency>
			<dependency>
				<groupId>com.lowagie</groupId>
				<artifactId>itext</artifactId>
				<type>jar</type>
				<version>2.1.7</version>
				<exclusions>
					<exclusion>
						<artifactId>bcprov-jdk14</artifactId>
						<groupId>org.bouncycastle</groupId>
					</exclusion>
					<exclusion>
						<artifactId>bcmail-jdk14</artifactId>
						<groupId>bouncycastle</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>net.sf.jasperreports</groupId>
				<artifactId>jasperreports</artifactId>
				<version>6.5.1</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
					<exclusion>
						<artifactId>itext</artifactId>
						<groupId>com.lowagie</groupId>
					</exclusion>
					<exclusion>
						<groupId>org.olap4j</groupId>
						<artifactId>olap4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.olap4j</groupId>
				<artifactId>olap4j</artifactId>
				<version>1.2.0</version>
			</dependency>
			<dependency>
				<groupId>org.jxls</groupId>
				<artifactId>jxls-reader</artifactId>
				<version>2.0.3</version>
			</dependency>
			<!-- 报表导入导出相关 end -->
			
			
			
		<dependency>
			<groupId>com.jupiterframework</groupId>
			<artifactId>jupiter-amqp</artifactId>
			<version>${jupiter.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jupiterframework</groupId>
			<artifactId>jupiter-cache</artifactId>
			<version>${jupiter.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jupiterframework</groupId>
			<artifactId>jupiter-core</artifactId>
			<version>${jupiter.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jupiterframework</groupId>
			<artifactId>jupiter-dao</artifactId>
			<version>${jupiter.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jupiterframework</groupId>
			<artifactId>jupiter-governance</artifactId>
			<version>${jupiter.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jupiterframework</groupId>
			<artifactId>jupiter-logging</artifactId>
			<version>${jupiter.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jupiterframework</groupId>
			<artifactId>jupiter-web</artifactId>
			<version>${jupiter.framework.version}</version>
		</dependency>
		
		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.2</version>
					<configuration>
						<skip>true</skip><!-- 执行install命令，不执行单元测试 -->
						<testFailureIgnore>true</testFailureIgnore>
					</configuration>
				</plugin>
				<!-- 生成源码 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.2.1</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<attach>true</attach>
					</configuration>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin><!-- 生成 timestamp属性 -->
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>1.4</version>
					<configuration>
						<timestampFormat>yyyyMMddHHmmss</timestampFormat>
						<items>
							<item>timestamp</item>
						</items>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>create-timestamp</goal>
							</goals>
						</execution>
					</executions>
					<inherited>true</inherited>
				</plugin>

				<!-- 生成启动脚本 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>appassembler-maven-plugin</artifactId>
					<version>1.10</version>
					<configuration>
						<configurationDirectory>config</configurationDirectory>
						<repositoryName>lib</repositoryName>
						<binFolder>bin</binFolder>
						<repositoryLayout>flat</repositoryLayout>
						<useWildcardClassPath>true</useWildcardClassPath>
						<logsDirectory>logs</logsDirectory>
						<tempDirectory>temp</tempDirectory>
						<encoding>${project.build.sourceEncoding}</encoding>
						<useTimestampInSnapshotFileName>true</useTimestampInSnapshotFileName>
						<includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
						<daemons>
							<daemon>
								<id>${project.name}</id>
								<commandLineArguments>
									<commandLineArgument>start</commandLineArgument>
								</commandLineArguments>
								<platforms>
									<platform>jsw</platform>
								</platforms>
								<jvmSettings>
									<extraArguments>
										<extraArgument>-server </extraArgument>
										<extraArgument>-XX:+AggressiveOpts</extraArgument>
										<extraArgument>${initialMemorySize}</extraArgument><!-- -Xms -->
										<extraArgument>${maxMemorySize}</extraArgument><!-- -Xmx -->
										<extraArgument>${youngGenerationSize}</extraArgument><!-- 设置年轻代大小 -->
										<extraArgument>${threadStackSize}</extraArgument><!-- 线程的栈大小 -->
										<extraArgument>${maxDirectMemorySize}</extraArgument>
										<!-- GC start -->
										<extraArgument>-XX:+PrintGCDetails</extraArgument>
										<extraArgument>-XX:+PrintGCTimeStamps</extraArgument>
										<extraArgument>-XX:+PrintGCDateStamps</extraArgument>
										<extraArgument>-Xloggc:logs/gc.log</extraArgument>
										<!-- <extraArgument>-XX:+PrintGCApplicationStoppedTime</extraArgument> -->
										<!-- <extraArgument>-XX:+HeapDumpBeforeFullGC</extraArgument> -->
										<!-- <extraArgument>-XX:+HeapDumpAfterFullGC</extraArgument> -->
										<extraArgument>-XX:+HeapDumpOnOutOfMemoryError</extraArgument>
										<extraArgument>-XX:HeapDumpPath=logs/dump.hprof</extraArgument>
										<!-- GC end -->

										<extraArgument>-Djava.io.tmpdir=temp</extraArgument>
										<extraArgument>-Dapp.env=${app.env}</extraArgument>
										<extraArgument>-Dspring.cloud.config.uri=${spring.cloud.config.uri}</extraArgument>
										<extraArgument>-Dspring.cloud.config.username=${spring.cloud.config.username}</extraArgument>
										<extraArgument>-Dspring.cloud.config.password=${spring.cloud.config.password}</extraArgument>
										<extraArgument>-Dskywalking.agent.application_code=${project.artifactId}</extraArgument>
										<extraArgument>-Duser.timezone=Asia/Shanghai</extraArgument>
										<extraArgument>${javaAgent}</extraArgument>
										
										<extraArgument>-Dinfo.version=${project.version}</extraArgument>
										<extraArgument>-Dinfo.build-time=${timestamp}</extraArgument>
									</extraArguments>
								</jvmSettings>
								<generatorConfigurations>
									<generatorConfiguration>
										<generator>jsw</generator>
										<includes>
											<include>windows-x86-64</include>
											<include>linux-x86-64</include>
										</includes>
										<configuration>
											<property>
												<name>configuration.directory.in.classpath.first</name>
												<value>config</value>
											</property>
											<property>
												<name>wrapper.java.classpath.4</name>
												<value>classes</value>
											</property>
											<property>
												<name>wrapper.ping.timeout</name>
												<value>120</value>
											</property>
											<property>
												<name>set.default.REPO_DIR</name>
												<value>lib</value>
											</property>
											<property>
												<name>wrapper.logfile.maxsize</name>
												<value>64m</value>
											</property>
											<property>
												<name>wrapper.logfile.maxfiles</name>
												<value>30</value>
											</property>
											<property>
												<name>wrapper.logfile</name>
												<value>logs/wrapper.log</value>
											</property>
										</configuration>
									</generatorConfiguration>
								</generatorConfigurations>
							</daemon>
						</daemons>
					</configuration>
					<executions>
						<execution>
							<id>generate-jsw</id>
							<phase>package</phase>
							<goals>
								<goal>generate-daemons</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- 打成压缩包 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.1.1</version>
					<dependencies>
						<dependency>
							<groupId>com.jupiterframework</groupId>
							<artifactId>jupiter-assembly</artifactId>
							<version>2.0.0-RELEASE</version>
						</dependency>
					</dependencies>
					<configuration>
						<finalName>${project.name}</finalName>
						<descriptorRefs>
							<descriptorRef>assembly-linux</descriptorRef>
							<descriptorRef>assembly-win</descriptorRef>
						</descriptorRefs>
						<attach>false</attach><!-- deploy不会把assembly打的zip包上传到nexus -->
					</configuration>
					<executions>
						<execution>
							<id>make-assembly</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- 更新版本 mvn release:prepare|perform -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<processAllModules>true</processAllModules>
					</configuration>
				</plugin>
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>2.2.4</version>
					<configuration>
						<dateFormat>yyyyMMddHHmmss</dateFormat>
						<useNativeGit>true</useNativeGit>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
					<configuration>
						<providerImplementations>
							<git>jgit</git>
						</providerImplementations>
						<detail>true</detail>
						<remoteTagging>false</remoteTagging>
						<releaseVersion>${project.version}</releaseVersion>
						<tagNameFormat>@{project.version}</tagNameFormat>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.scm</groupId>
							<artifactId>maven-scm-provider-jgit</artifactId>
							<version>1.9.5</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<app.env>dev</app.env>
				<!--initialMemorySize maxMemorySize youngGenerationSize threadStackSize maxDirectMemorySize -->
				<initialMemorySize>-Xms256M</initialMemorySize>
				<maxMemorySize>-Xmx512M</maxMemorySize>
				<youngGenerationSize>-Xmn256M</youngGenerationSize>
				<threadStackSize>-Xss256K</threadStackSize>
				<maxDirectMemorySize>-XX:MaxDirectMemorySize=128M</maxDirectMemorySize>
				<javaAgent>-Dagent=</javaAgent>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<app.env>test</app.env>
				<initialMemorySize>-Xms512M</initialMemorySize>
				<maxMemorySize>-Xmx1G</maxMemorySize>
				<youngGenerationSize>-Xmn384M</youngGenerationSize>
				<threadStackSize>-Xss256K</threadStackSize>
				<maxDirectMemorySize>-XX:MaxDirectMemorySize=256M</maxDirectMemorySize>
				<javaAgent>-Dagent=</javaAgent>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<app.env>prod</app.env>
				<initialMemorySize>-Xms2G</initialMemorySize>
				<maxMemorySize>-Xmx2G</maxMemorySize>
				<youngGenerationSize>-Xmn512M</youngGenerationSize>
				<threadStackSize>-Xss384K</threadStackSize>
				<maxDirectMemorySize>-XX:MaxDirectMemorySize=512M</maxDirectMemorySize>
				<javaAgent>-Dagent=</javaAgent>
			</properties>
		</profile>
	</profiles>

	<repositories>
		<!-- Required repositories by your develop team -->
		<repository>
			<id>nexus-snapshots</id>
			<name>Nexus</name>
			<url>http://nexus.jupiter.com:8081/nexus/content/groups/public/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
<!-- 				<updatePolicy>always</updatePolicy> -->
			</releases>
			<snapshots>
				<enabled>true</enabled>
<!-- 				<updatePolicy>always</updatePolicy> -->
			</snapshots>
		</repository>
	</repositories>

	<distributionManagement>
		<repository>
			<id>nexus-releases</id>
			<name>Nexus Release Repository</name>
			<url>http://nexus.jupiter.com:8081/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<name>Nexus snapshots Repository</name>
			<url>http://nexus.jupiter.com:8081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
</project>